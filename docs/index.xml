<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog</title>
    <link>https://husio.github.io/blog/</link>
    <description>Recent content on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://husio.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Accessing data in Go</title>
      <link>https://husio.github.io/blog/post/accessing-data-in-go/</link>
      <pubDate>Sun, 02 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://husio.github.io/blog/post/accessing-data-in-go/</guid>
      <description>When writing a web application, we have to decide how to access data. Where to get it from, how to store it, how to manipulate it. Storage engines can vary, from being a single SQLite file to cache server or even an external service exposing an API.
There are many ways this topic can be addressed. I will explain how a simple and straightforward solution can be evolved into a more sophisticated one.</description>
    </item>
    
  </channel>
</rss>