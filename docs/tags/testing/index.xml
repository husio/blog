<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing on Notes</title><link>https://husio.github.io/blog/tags/testing/</link><description>Recent content in Testing on Notes</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 30 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://husio.github.io/blog/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Testing in Go</title><link>https://husio.github.io/blog/testing-in-go/</link><pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate><guid>https://husio.github.io/blog/testing-in-go/</guid><description>This is a collection of testing techniques and patterns that I have learned throughout my career of being a Go programmer.
testing package basics The Go standard library comes with the testing package which provides a solid base for writing tests.
Each test should be a separate function. A test function must accept a single argument of type *testing.T.
A test for a functoin isEven could look like this:
func TestIsEven(t *testing.</description></item></channel></rss>